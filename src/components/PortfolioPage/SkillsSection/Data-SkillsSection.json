{
  "javascript": {
      "id": "javascript",
      "title": "Javascript",
      "description": "Javascript is the first integration Rob acquired but it is on of the most valued. Javascript and ES6 are an invaluable too that can be used in many different frameworks and libraries.",
      "usedIn": "Used in: Point of Sale systems, Web Applications, TV deployments, REST APIs, Event Sourced systems",
      "link": "https://developer.mozilla.org/bm/docs/Web/JavaScript",
      "mainPoints": [
        "ES5 & ES6",
        "Testing in different javascript frameworks",
        "Immediately-Invoked Function Expression (IIFE) for self-invoked anon functions",
        "Closures and Asynchronous Callbacks",
        "JSON Objects",
        "Package management with NPM and Yarn"
      ]
  },
  "react": {
    "id": "react",
    "title": "React + Redux",
    "description": "React is a pleasure to integrate with but it isn’t a full MVC framework and so Redux has been used to handle the state of the application. React handles components while Redux Store in the single source of truth for the application.",
    "usedIn": "Used in: Point of Sales systems, Web applications",
    "link": "https://reactjs.org/",
    "mainPoints": [
      "React in ES6 and Webpack",
      "Stateless Functional Components vs. Stateful Container Components",
      "Quick starting application with Create-React-App",
      "Testing using Enzyme",
      "Redux stores for an single source of truth",
      "Redux Actions and Reducers deployed by Dispatch to the app"
    ]
  },
  "golang": {
    "id": "golang",
    "title": "Golang",
    "description": "Google created Golang is very different from the others on this list but it is a super-powerful integration. It is readable, elegant and great for concurrent programming. It is not the most used integration but one that is greatly enjoyed.",
    "usedIn": "Used in: CQRS/ES backend systems, RESTful APIs",
    "link": "https://golang.org/doc/",
    "mainPoints": [
      "Building RESTful APIs in Golang",
      "Integration with web applications",
      "CQRS and Event Sourcing applications in Golang"
    ]
  },
  "cqrs": {
    "id": "cqrs",
    "title": "CQRS (Command Query Responsibility Segregation) and ES (Event Sourcing)",
    "description": "CQRS and Event Sourcing has been advanced by Gregg Young and is a particularly powerful way to structure apps. Event streams create the state of the application and can be rebuilt from the beginning of time with eventual consistency",
    "usedIn": "Used in: Inventory Systems, Web application backends",
    "link": "https://eventstore.org/docs/",
    "mainPoints": [
      "Training with Gregg Young and James Nugent (Creators of GetEventStore)",
      "Building CQRS/ES application in NodeJS and Golang",
      "Eventual consistency from event handling"
    ]
  },
  "node": {
    "id": "node",
    "title": "NodeJS + Express",
    "description": "NodeJS and it’s V8 engine are a great way to keep Javascript at every level of the stack. It has been integrated successfully but it has it’s faults. Express is a popular web framework for NodeJS.",
    "usedIn": "Used in: Web application backends, CQRS/ES systems",
    "link": "https://nodejs.org/en/docs/",
    "mainPoints": [
      "Event Loop and the EventEmitters",
      "Asynchronous Callbacks",
      "Express for web navigation",
      "NPM packages management"
    ]
  },
  "angular": {
    "id": "angular",
    "title": "AngularJS",
    "description": "AngularJS (Angular 1) is an integration that has been used in the past but is being phased out. This integration was alright to use but because of some of its issues React is the better option today.",
    "usedIn": "Used in: Web applications, eCommerce systems, TV deployments",
    "link": "https://angularjs.org/",
    "mainPoints": [
      "MVC development",
      "Difficult testing",
      "DOM overload is an issue",
      "Scope handling can be a hassle"
    ]
  }
,
  "others": {
    "id": "others",
    "title": "Others",
    "description": "These are some of the other languages and frameworks I have worked with. It is long from being a complete list and is mostly filled with technologies I have actually enjoyed working with or gotten value from.",
    "usedIn": "Used in: All kind of stuff, and some things too!",
    "mainPoints": [
      "ElectronJS: Self-contained web apps",
      "Mocha, Chai: For JS testing",
      "Enzyme: for React testing",
      "NextJS: for single paged web apps",
      "SQL: for databases (Postgres, MySQL)",
      "Java: used long ago"
    ]
  }
}